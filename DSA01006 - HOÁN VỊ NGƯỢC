#include<iostream>
#include<stdbool.h>
using namespace std;
bool x = false;

void sinh(int* M, int n) {
	int i = n - 2;
	while (i >= 0 && M[i] > M[i + 1])i--;
	if (i < 0)x = true;
	else {
		int k = n - 1;
		while (M[k] < M[i])k--;
		swap(M[k], M[i]);
		int l = i + 1, r = n - 1;
		while (l < r) {
			swap(M[l], M[r]); l++; r--;
		}
	}
}

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100];
		x = false;
		int N[100000][10];
		int a = 0;
		for (int i = 0; i < n; i++)M[i] = i + 1;
		while (!x) {
			for (int i = 0; i < n; i++)N[a][i] = M[i];
			a++;
			sinh(M, n);
		}
		for (int j = a - 1; j >= 0; j--) {
			for (int i = 0; i < n; i++)cout << N[j][i];
			cout << " ";
		}
		cout << endl;

	}
}
