#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
vector<string> X,Y;
bool ok = false;

void sinh(int* M, int n) {
	int i = n - 2;
	while (i >= 0 && M[i] > M[i + 1])i--;
	if (i < 0)ok = true;
	else {
		int k = n - 1;
		while (M[k] < M[i])k--;
		swap(M[k], M[i]);
		int l = i + 1, r = n - 1;
		while (l < r) {
			swap(M[l], M[r]); l++; r--;
		}
	}
}

int main() {
	int n, k; cin >> n >> k;
	int M[100][100];
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++)cin >> M[i][j];
	}
	int X[100];
	for (int i = 0; i < n; i++)X[i] = i + 1;
	vector<vector<int>> S;
	while (!ok) {
		vector<int> B;
		int sum = 0;
		for (int i = 0; i < n; i++)
			sum += M[i][X[i]-1];
		if (sum == k) {
			for (int i = 0; i < n; i++)B.push_back(X[i]);
			S.push_back(B);
		}
		sinh(X, n);
	}
	cout << S.size() << endl;
	for (vector<int> V : S) {
		for (int h : V)cout << h << " ";
		cout << endl;
	}
}
